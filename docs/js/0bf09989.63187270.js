(window["webpackJsonp"]=window["webpackJsonp"]||[]).push([["0bf09989"],{2514:function(e,t,n){"use strict";var a=function(){var e=this,t=e.$createElement,n=e._self._c||t;return n("div",[n("section",{staticClass:"page-header"},[n("div",{staticClass:"text-h1 project-name"},[e._v("QThemeMixin")]),n("div",{staticClass:"text-h2 project-tagline"},[e._v("Mixin library for Vue Render Functions")]),n("div",{staticClass:"byline"},[e._v("Created and maintained by Jeff Galbraith")]),n("div",{staticClass:"quasar"},[e._v("A Quasar Framework Mix-in")]),n("q-btn",{staticClass:"btn",attrs:{type:"a",href:"https://github.com/hawkeye64/q-theme-mixin",target:"_blank",label:"View on GitHub","no-caps":"",flat:""}}),n("q-btn",{staticClass:"btn",attrs:{to:"/docs",label:"Docs","no-caps":"",flat:""}}),n("q-btn",{staticClass:"btn",attrs:{to:"/examples",label:"Examples","no-caps":"",flat:""}}),n("q-btn",{staticClass:"btn",attrs:{type:"a",href:"https://donate.quasar.dev",target:"_blank",label:"Donate","no-caps":"",flat:""}})],1),n("main",{staticClass:"flex flex-start justify-center inset-shadow"},[n("div",{staticClass:"q-pa-md col-12-sm col-8-md col-6-lg inset-shadow",staticStyle:{width:"100%",height:"3px"}}),n("div",{staticClass:"q-pa-md col-12-sm col-8-md col-6-lg bg-white shadow-1",staticStyle:{"max-width":"800px",width:"100%"}},[e._t("default")],2)])])},o=[],s={name:"Hero"},i=s,r=n("2877"),l=Object(r["a"])(i,a,o,!1,null,null,null);t["a"]=l.exports},6566:function(e){e.exports=JSON.parse('{"type":"mixin","props":{"theme-enabled":{"type":"Boolean","category":"style","desc":"Turns theming on or off"},"theme":{"type":"Object","category":"style","desc":"A customized theme definition (see examples above)","__exemption":["examples"]}},"methods":{"useDefaultTheme":{"desc":"Used as a placeholder when theming is turned off (replaces `setBothColors` in Colorize mixin)","__exemption":["examples"],"params":{"color":{"type":"String","desc":"Any color from the [Quasar Color Pallete](https://quasar.dev/style/color-palette) or a CSS color (#, rgb, rgba, hls, etc)","__exemption":["examples"]},"bgColor":{"type":"String","desc":"Any color from the [Quasar Color Pallete](https://quasar.dev/style/color-palette) or a CSS color (#, rgb, rgba, hls, etc)","__exemption":["examples"]},"data":{"type":"Object","desc":"Typically the `{ }` of a render function","__exemption":["examples"]}},"returns":{"type":"Object","desc":"The passed in `data` with no modifications"}},"getThemeColors":{"desc":"Returns a Map of theme items based on passed in keys","__exemption":["examples"],"params":{"keys":{"type":"Array","desc":"An array of keys to return from the `theme` object","__exemption":["examples"]}},"returns":{"type":"Map","desc":"Returns a Map of theme items based on passed in keys"}}}}')},"8b24":function(e,t,n){"use strict";n.r(t);var a=function(){var e=this,t=e.$createElement,n=e._self._c||t;return n("hero",[n("q-markdown",{attrs:{src:e.markdown,toc:""},on:{data:e.onToc}}),n("component-api",{attrs:{title:"QThemeMixin API",json:e.themeJson,type:"Vue Mixin"}}),n("q-markdown",[e._v("\n# Donate\nIf you appreciate the work that went into this App Extension, please consider [donating to Quasar](https://donate.quasar.dev).\n\n---\nThis page created with [QMarkdown](https://quasarframework.github.io/app-extension-qmarkdown), another great Quasar App Extension.\n    ")]),n("q-page-scroller",{attrs:{position:"bottom-right","scroll-offset":150,offset:[18,18]}},[n("q-btn",{attrs:{fab:"",icon:"keyboard_arrow_up",color:"primary"}})],1)],1)},o=[],s=n("2514"),i="QThemeMixin\n===\n\nQThemeMixin is a Vue Mix-in library for components created with Quasar Framework. It is only for components that use a `render` function. It does not work with template formats found with SFC (single file components). This mixin works best in conjunction with the [QColorizeMixin][https://github.com/hawkeye64/q-colorize-mixin] to apply the theme colors.\n\n# Features\n\nAllows you to define themes to be used (check out [QCalendar](https://github.com/quasarframework/app-extension-qcalendar))\n\n# Install\nTo add this mix-in to your Quasar application, run the following (in your Quasar app folder):\n\n```bash\nyarn add q-theme-mixin\n\n# or\n\nnpm install q-theme-mixin\n```\n\n# Uninstall\nTo remove this mix-in from your Quasar application, run the following (in your Quasar app folder):\n\n```bash\nyarn remove q-theme-mixin\n\n# or\n\nnpm remove q-theme-mixin\n```\n\n# Examples\nExamples with code can be found [here](https://hawkeye64.github.io/q-theme-mixin/examples).\n\n# Demo Project (source)\nSource for this application can be found [here](https://github.com/hawkeye64/q-theme-mixin/tree/master/demo).\n\n# Code Usage\n\nIt is important to note that this mixin is intended to be used with Vue **render** functions and not in SFC (single file components). It does not have a render function of its own.\n\n## As a Mixin\n\n```js\nimport Vue from 'vue'\nimport QThemeMixin from 'q-theme-mixin'\n\nexport default Vue.extend({\n  name: 'my-component',\n\n  mixins: [QThemeMixin], // <- notice use as a Vue mixin\n...\n```\n",r=n("6566"),l={name:"PageIndex",components:{Hero:s["a"]},data:function(){return{markdown:i,themeJson:r}},computed:{toc:{get:function(){return this.$store.state.common.toc},set:function(e){this.$store.commit("common/toc",e)}}},methods:{onToc:function(e){e.push({id:"QThemeMixin-API",label:"QThemeMixin API",level:1,children:Array(0)}),e.push({id:"Donate",label:"Donate",level:1,children:Array(0)}),this.toc=e}}},m=l,c=n("2877"),p=Object(c["a"])(m,a,o,!1,null,null,null);t["default"]=p.exports}}]);
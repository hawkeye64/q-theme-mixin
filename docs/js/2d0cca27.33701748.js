(window["webpackJsonp"]=window["webpackJsonp"]||[]).push([["2d0cca27"],{"4f87":function(n,e,o){"use strict";o.r(e),e["default"]="<template>\n  <div class=\"q-pa-md\">\n    <div class=\"q-pb-md q-gutter-md row justify-around\">\n      <q-toggle\n        class=\"col-12\"\n        v-model=\"enableTheme\"\n        label=\"Enable themes\"\n      />\n      <q-select\n        outlined\n        dense\n        emit-value\n        map-options\n        label=\"Change theme\"\n        v-model=\"theme\"\n        :options=\"themesList\"\n        :disable=\"enableTheme !== true\"\n        class=\"col-12\"\n      />\n    </div>\n    <q-separator />\n    <div class=\"q-pa-md row justify-around\">\n      <my-component\n        :enable-theme=\"enableTheme\"\n        :theme=\"theme\"\n        class=\"text-center\"\n      >\n        <div class=\"text-h4\">Some Text</div>\n      </my-component>\n    </div>\n  </div>\n</template>\n\n<script>\nimport Vue from 'vue'\nimport { QColorizeMixin } from 'q-colorize-mixin'\nimport { QThemeMixin } from 'q-theme-mixin'\n\nconst MyComponent = Vue.extend({\n  name: 'my-component',\n\n  mixins: [QColorizeMixin, QThemeMixin],\n\n  render (h) {\n    let colors = new Map(), color, bgColor\n    let updateColors = this.useDefaultTheme\n    if (this.enableTheme === true) {\n      color = 'color'\n      bgColor = 'bgColor'\n      colors = this.getThemeColors([color, bgColor])\n      updateColors = this.setBothColors\n    }\n\n    return h('div', updateColors(colors.get(color), colors.get(bgColor), {\n      style: {\n        width: '200px',\n        height: '200px'\n      }\n    }), [\n      this.$slots.default\n    ])\n  }\n})\n\nexport default {\n  components: {\n    MyComponent\n  },\n\n  data () {\n    return {\n      enableTheme: true,\n      theme: void 0,\n      themes: [\n        {\n          name: 'Default'\n        },\n        {\n          name: 'Dark',\n          color: 'blue-grey-2',\n          bgColor: 'blue-grey-8'\n        },\n        {\n          name: 'Teal',\n          color: 'teal-2',\n          bgColor: 'teal-8'\n        },\n        {\n          name: 'Brown',\n          color: 'brown-2',\n          bgColor: 'brown-8'\n        },\n        {\n          name: 'Deep Purple',\n          color: 'deep-purple-2',\n          bgColor: 'deep-purple-8'\n        },\n        {\n          name: 'Indigo',\n          color: 'grey-2',\n          bgColor: 'indigo-8'\n        },\n        {\n          name: 'Blue',\n          color: 'blue-2',\n          bgColor: 'blue-8'\n        }\n      ]\n    }\n  },\n\n  computed: {\n    themesList () {\n      const list = []\n      this.themes.forEach((theme) => {\n        list.push({\n          label: theme.name,\n          value: { ...theme }\n        })\n      })\n      return list\n    }\n  }\n}\n<\/script>\n"}}]);